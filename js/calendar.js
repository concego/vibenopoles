// Define o caminho base para desenvolvimento local ou GitHub Pages
const BASE_PATH = window.location.hostname === 'localhost' ? '' : '/vibenopoles';

// Importa√ß√µes
import { loadFromLocalStorage, saveToLocalStorage, notify, debugLog, formatDate } from `${BASE_PATH}/js/utils.js`;
import { addAriaLabels, handleKeyboardNavigation } from `${BASE_PATH}/js/accessibility.js`;
import { updateFarm } from `${BASE_PATH}/js/farm.js`;

// Inicializa o sistema de calend√°rio
export function initCalendar(state) {
    debugLog('Inicializando calend√°rio', { state });
    state.calendar = state.calendar || {
        currentDate: Date.now(),
        dayCount: 1
    };

    updateCalendar(state);
    saveToLocalStorage(state);
}

// Atualiza o calend√°rio e sistemas dependentes
export function updateCalendar(state) {
    debugLog('Atualizando calend√°rio', { currentDate: state.calendar.currentDate, dayCount: state.calendar.dayCount });
    const calendarSection = document.createElement('div');
    calendarSection.id = 'calendar';
    calendarSection.setAttribute('role', 'region');
    calendarSection.setAttribute('aria-label', 'Calend√°rio');
    calendarSection.innerHTML = `
        <h2>Calend√°rio üìÖ</h2>
        <p id="calendar-info" aria-live="polite">
            Data: ${formatDate(state.calendar.currentDate)}<br>
            Dia: ${state.calendar.dayCount}
        </p>
    `;

    // Substituir ou adicionar a se√ß√£o na interface
    const gameContainer = document.getElementById('game');
    if (!gameContainer) {
        debugLog('Erro: Cont√™iner #game n√£o encontrado para calend√°rio');
        notify('‚ö†Ô∏è Erro: Cont√™iner do jogo n√£o encontrado.', 'assertive');
        return;
    }
    const existingSection = document.getElementById('calendar');
    if (existingSection) {
        existingSection.replaceWith(calendarSection);
        debugLog('Se√ß√£o #calendar substitu√≠da');
    } else {
        gameContainer.appendChild(calendarSection);
        debugLog('Se√ß√£o #calendar adicionada ao #game');
    }

    // Atualizar sistemas dependentes do tempo (ex.: farm.js)
    updateFarm(state);

    // Adicionar acessibilidade
    addAriaLabels();
    handleKeyboardNavigation();

    debugLog('Calend√°rio atualizado na interface', { date: formatDate(state.calendar.currentDate), dayCount: state.calendar.dayCount });
}